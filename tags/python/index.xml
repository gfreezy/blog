<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on allsunday</title>
    <link>http://blog.allsunday.io/tags/python/</link>
    <description>Recent content in python on allsunday</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 09 Nov 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.allsunday.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python 多继承下 metaclass 优先级</title>
      <link>http://blog.allsunday.io/posts/2014-11-09-python-mutiple-metaclass/</link>
      <pubDate>Sun, 09 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.allsunday.io/posts/2014-11-09-python-mutiple-metaclass/</guid>
      <description>在 Python 里面，class 也是一个对象，它是 type 实例化后生成的对象。 我们一般用如下的代码来定义一个类。 class ClassA(object): def method1(self): pass @classmethod def method2(cls): pass 实际上 class 这个关键字是类似语法</description>
    </item>
    
    <item>
      <title>mako根据条件判断是否使用页面缓存</title>
      <link>http://blog.allsunday.io/posts/2014-02-19-cache-pages-for-anonymous-users-in-mako/</link>
      <pubDate>Wed, 19 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.allsunday.io/posts/2014-02-19-cache-pages-for-anonymous-users-in-mako/</guid>
      <description>最近遇到网站速度慢的情况，排查许久没查出什么原因。于是想着匿名用户的访问量占据了一半多，如果这一部分的请求全部缓存下来，那么应该能够很大程度</description>
    </item>
    
    <item>
      <title>scrapy could not parse some html page correctly</title>
      <link>http://blog.allsunday.io/posts/2012-09-06-scrapy-could-not-parse-some-html-page-correctly/</link>
      <pubDate>Thu, 06 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.allsunday.io/posts/2012-09-06-scrapy-could-not-parse-some-html-page-correctly/</guid>
      <description>在用Scrapy爬取淘宝的搜索结果时，发现很多的页面通过XPathSelector转换后丢失了很多的数据，只留下了一小部分的页面。 起初是以为</description>
    </item>
    
    <item>
      <title>debian安装mysql-python模块</title>
      <link>http://blog.allsunday.io/posts/2011-11-24-debianan-zhuang-mysql-pythonmo-kuai/</link>
      <pubDate>Thu, 24 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.allsunday.io/posts/2011-11-24-debianan-zhuang-mysql-pythonmo-kuai/</guid>
      <description>直接 pip install mysql-python 提示 mysql-config 未找到，google了下，发现要先安装libmysql++-dev。 apt-get install limysql++-dev pip install mysql-python 安装完成，可以在python中用mysql了</description>
    </item>
    
  </channel>
</rss>